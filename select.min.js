function getURLParam(name,url){url||(url=location.href),name=name.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var regexS="[\\?&]"+name+"=([^&#]*)",regex=new RegExp(regexS),results=regex.exec(url);return null==results?null:results[1]}function setURLParam(key,value,url){var re=new RegExp("([?&])"+key+"=.*?(&|$)","i"),separator=-1!==url.indexOf("?")?"&":"?";return url.match(re)?url.replace(re,"$1"+key+"="+value+"$2"):url+separator+key+"="+value}function intersection(str1,str2){for(var result="",i=0;i<str1.length;i++)-1!=str2.indexOf(str1[i])&&(result+=str1[i]);return result}function sortString(str){return str.split("").sort().join("")}function removeDuplicates(str){for(var result="",i=0;i<str.length;i++)-1==result.indexOf(str[i])&&(result+=str[i]);return result}function getURLParent(){var url=window.location.href,loc=url.lastIndexOf("/")+1;return 8>=loc?url+="/":url=url.substring(0,loc),url}function dist(x1,y1,x2,y2){return Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2))}var psets=[{name:"Problem Set 5",problems:[{name:"1.i",charSet:"abc",type:"dfa"},{name:"1.ii",charSet:"ab",type:"dfa"},{name:"1.iii",charSet:"abcdefghijklmnopqrstuvwxyz",type:"dfa"},{name:"1.iv",charSet:"yd",type:"dfa"},{name:"2.i",charSet:"abc",type:"nfa"},{name:"2.ii",charSet:"abcde",type:"nfa"},{name:"2.iii",charSet:"ab",type:"nfa"}]}];Math.bound=function(value,min,max){for(var mod=max-min;min>value;)value+=mod;for(;value>max;)value-=mod;return value};var isIE=function(){var ua=window.navigator.userAgent,msie=ua.indexOf("MSIE ");if(msie>0)return parseInt(ua.substring(msie+5,ua.indexOf(".",msie)),10);var trident=ua.indexOf("Trident/");if(trident>0){var rv=ua.indexOf("rv:");return parseInt(ua.substring(rv+3,ua.indexOf(".",rv)),10)}var edge=ua.indexOf("Edge/");return edge>0?parseInt(ua.substring(edge+5,ua.indexOf(".",edge)),10):!1}(),isSafari=function(){var uagent=navigator.userAgent.toLowerCase();return/safari/.test(uagent)&&!/chrome/.test(uagent)}(),gServer={};gServer.url_prefix="/class/cs103/cgi-bin/restricted",gServer.name="",gServer.changeName=function(name){var new_url=setURLParam("saved",name,window.location.href);window.history.pushState({},"",new_url),gServer.name=name},gServer.save=function(name,callback){var save_url="/api/save.php",stringGraph=JSON.stringify(gGraph.save()),pack={automata:stringGraph,name:name};d3.xhr(gServer.url_prefix+save_url).header("Content-Type","application/json").post(JSON.stringify(pack),function(err,rawData){err?callback(err,null):callback(err,rawData)})},gServer.load=function(selected,callback){var get_url="/api/loadFromSaved.php?name="+selected;d3.xhr(gServer.url_prefix+get_url).header("Content-Type","application/json").get(function(err,res){var json_data=JSON.parse(res.response);callback(err,JSON.parse(json_data[0].automata))})},gServer.submit=function(automata,pset,problem,callback){var submit_url="/api/submit.php",pack={automata:automata,pset:pset,problem:problem},packed=JSON.stringify(pack);d3.xhr(gServer.url_prefix+submit_url).header("Content-Type","application/json").post(packed,function(err,rawData){callback(err)})},gServer.listSubmissions=function(callback){var listSubmissions_url="/api/listSubmissions.php";try{d3.xhr(gServer.url_prefix+listSubmissions_url).header("Content-Type","application/json").get(function(err,rawData){var data=rawData?JSON.parse(rawData.response):null;callback(data,err)})}catch(err){console.error("Could not connect to server")}},gServer.loadSubmission=function(pset,problem,callback){var loadFromSubmissions_url="/api/loadFromSubmissions.php",full_url=gServer.url_prefix+loadFromSubmissions_url+"?problem="+problem+"&pset="+pset;d3.xhr(full_url).header("Content-Type","application/json").get(function(err,rawData){err?callback(err,null):callback(err,JSON.parse(rawData.response))})},gServer.listSaved=function(callback){var listSaved_url="/api/listSaved.php";try{d3.xhr(gServer.url_prefix+listSaved_url).header("Content-Type","application/json").get(function(err,data){err?callback(err,null):callback(err,JSON.parse(data.response))})}catch(err){console.error("Could not connect to server")}},gServer.getSunetid=function(callback){var getSunetid_url="/api/getSunetid.php";try{d3.xhr(gServer.url_prefix+getSunetid_url).header("Content-Type","application/json").get(function(err,data){callback(err?null:data.response)})}catch(err){console.error("Could not connect to server")}};var gServerMock={};gServerMock.url_prefix="/class/cs103/cgi-bin/restricted",gServerMock.name="automata",gServerMock.save=function(){var name=gModalMenu.getSaveName();if(0==name.replace(/\s/g,"").length)return void gErrorMenu.displayError("Automata name cannot be blank");gServer.name=name;var save_url="/api/save.php";gModalMenu.setSaveButton("Saving...");var stringGraph=JSON.stringify(gGraph.save()),pack={automata:stringGraph,name:name};d3.xhr(gServer.url_prefix+save_url).header("Content-Type","application/json").post(JSON.stringify(pack),function(err,rawData){err?gModalMenu.setSaveButton("Failed"):gModalMenu.setSaveButton("Saved!"),window.setTimeout(function(){gModalMenu.setSaveButton("Save"),gModalMenu.close("save")},1e3)})},gServerMock.load=function(){var selected=gModalMenu.getLoadName(),get_url="/api/loadFromSaved.php?name="+selected;d3.xhr(gServer.url_prefix+get_url).header("Content-Type","application/json").get(function(err,data){err&&console.log(err);var json_data=JSON.parse(data.response);gGraph.load(JSON.parse(json_data[0].automata)),gGraph.draw(),gModalMenu.close("load")})},gServerMock.submit=function(){var submit_url="/api/submit.php",automata=JSON.stringify(gGraph.save()),pset=1,problem=1,pack={automata:automata,pset:pset,problem:problem};d3.xhr(gServer.url_prefix+submit_url).header("Content-Type","application/json").post(JSON.stringify(pack),function(err,rawData){err?console.log(err):console.log(rawData)})},gServerMock.listSubmissions=function(){var listSubmissions_url="/api/listSubmissions.php";d3.xhr(gServer.url_prefix+listSubmissions_url).header("Content-Type","application/json").get(function(err,rawData){if(err)console.log(err);else{console.log(rawData);JSON.parse(rawData.response)}})},gServerMock.loadSubmission=function(){var pset=1,problem=1,loadFromSubmissions_url="/api/loadFromSubmissions.php",full_url=gServer.url_prefix+loadFromSubmissions_url+"?problem="+problem+"&pset="+pset;d3.xhr(full_url).header("Content-Type","application/json").get(function(err,rawData){if(err)console.log(err);else{console.log(rawData);var data=JSON.parse(rawData.response),automata=JSON.parse(data[0].automata);gGraph.load(automata),gGraph.draw()}})},gServerMock.listSaved=function(callback){callback([{name:"test1"},{name:"test2"}])},gServerMock.getSunetid=function(callback){callback("mprecup")},null!=getURLParam("mock")&&(gServer=gServerMock);
//# sourceMappingURL=sourceMap.map